server:
  port: ${SERVER_PORT:8099}
  servlet.context-path: ${SERVER_CONTEXT-PATH:/api/voting-challenge}
  compression.enabled: true
  error.include-message: always
  spring.url: ${SERVER_SPRING_URL:localhost:8099}
spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/voting_challenge?currentSchema=public}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:123}
    driverClassName: org.postgresql.Driver
    driver: org.postgresql.Driver
    connection-from: true
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      format_sql: true
      dialect: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate.format_sql: true
  liquibase:
    enabled: true
    default-schema: public
    liquibase-schema: public
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    change-log: db.changelog/db.changelog-master.yaml
  application.name: voting-challenge
  web:
    locale: pt_BR
    localeResolver: fixed
  servlet:
    multipart:
      max-file-size: 25MB
      max-request-size: 25MB
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    properties:
      sasl:
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${KAFKA_USERNAME:'admin'} password=${KAFKA_PASSWORD:'admin-secret'};
        mechanism: PLAIN
      security:
        protocol: SASL_PLAINTEXT
    consumer:
      auto-offset-reset: earliest
      group-id: example
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1
      fetch-max-wait: 36000
      enable-auto-commit: false
      client-id: example
    producer:
      client-id: example
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 2
    jaas:
      enabled: true
    listener:
      poll-timeout: 1800000
      concurrency: 1
      ack-mode: manual_immediate
springdoc:
  override-with-generic-response: false
  api-docs:
    enabled: true
  swagger-ui:
    server.list: ${SPRINGDOC_SWAGGER-UI_SERVER_LIST:https://voting-challenge.herokuapp.com/api/voting-challenge}
    enabled: true
    doc-expansion: none
    operations-sorter: alpha
    tags-sorter: alpha
    filter: true
    path: /swagger-ui
    disable-swagger-default-url: true
    csrf.enabled: false
  default-produces-media-type: application/json
api:
  standard-error:
    trace: false
  cpf:
    uri: https://user-info.herokuapp.com/users
zeromq:
  port:
    sender: tcp://localhost:5555
    receiver: tcp://*:5555
example:
  kafka:
    consumer-enabled: ${CONSUMER-ENABLE:true}